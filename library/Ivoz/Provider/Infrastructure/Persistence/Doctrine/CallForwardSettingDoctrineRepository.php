<?php

namespace Ivoz\Provider\Infrastructure\Persistence\Doctrine;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Ivoz\Provider\Domain\Model\CallForwardSetting\CallForwardSetting;
use Ivoz\Provider\Domain\Model\CallForwardSetting\CallForwardSettingInterface;
use Ivoz\Provider\Domain\Model\CallForwardSetting\CallForwardSettingRepository;
use Ivoz\Provider\Domain\Model\User\UserInterface;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * CallForwardSettingDoctrineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CallForwardSettingDoctrineRepository extends ServiceEntityRepository implements CallForwardSettingRepository
{
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, CallForwardSetting::class);
    }

    /**
     * @param mixed $userId
     * @return int
     */
    public function countByUserId($userId) :int
    {
        $qb = $this->createQueryBuilder('self');

        return $qb
            ->select('count(self.id)')
            ->where($qb->expr()->eq('self.user', $userId))
            ->getQuery()
            ->getSingleScalarResult();
    }

    /**
     * @param UserInterface $user
     * @return CallForwardSettingInterface[]
     */
    public function findAndJoinByUser(UserInterface $user) :array
    {
        $qb = $this->createQueryBuilder('self');

        $query = $qb
            ->select('self', 'e', 'v')
            ->where(
                $qb->expr()->eq('self.user', $user->getId())
            )
            ->leftJoin('self.extension', 'e')
            ->leftJoin('self.voiceMailUser', 'v')
            ->getQuery();

        return $query->getResult();
    }
}
